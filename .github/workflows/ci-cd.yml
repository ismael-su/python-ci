
name: Linting, Testing and deployment

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dev dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install fastapi flake8 pytest autopep8
        pip install -r requirements.txt
    - name: Lint with autopep8 and check with flake8
      run: |
        # lint all python files in project
        autopep8 --in-place --aggressive --aggressive ./*.py
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count  --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: pytest

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v2
      id: docker_build
      with:
        context: .
        push: true
        tags: ghcr.io/user/app:latest

    - name: output
      run: echo ${{ steps.docker_build.outputs.digest }}

